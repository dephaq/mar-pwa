/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/subscriptions": {
    /** Create subscription */
    post: operations["createSubscription"];
  };
  "/api/subscriptions/{id}": {
    /** Remove subscription */
    delete: operations["deleteSubscription"];
  };
  "/api/notify": {
    /** Send notification immediately */
    post: operations["notifyNow"];
  };
  "/api/consents": {
    /** Store user consent */
    post: operations["createConsent"];
  };
  "/api/campaigns": {
    /** List campaigns */
    get: operations["listCampaigns"];
    /** Create campaign */
    post: operations["createCampaign"];
  };
  "/api/campaigns/{id}": {
    /** Get campaign */
    get: operations["getCampaign"];
    /** Stop campaign */
    put: operations["stopCampaign"];
    /** Launch campaign */
    post: operations["launchCampaign"];
  };
  "/api/campaigns/{id}/events": {
    /** List campaign events */
    get: operations["listCampaignEvents"];
  };
  "/api/studies": {
    /** List studies */
    get: operations["listStudies"];
    /** Create study */
    post: operations["createStudy"];
  };
  "/api/studies/{id}": {
    /** Get study by id */
    get: operations["getStudy"];
    /** Update study */
    put: operations["updateStudy"];
  };
  "/api/invitations/launch": {
    /** Launch invitations */
    post: operations["launchInvitations"];
  };
  "/api/export/invitations.csv": {
    /** Export invitations CSV */
    get: operations["exportInvitations"];
  };
  "/api/audience": {
    /** Search audience */
    get: operations["searchAudience"];
  };
  "/api/audience/export.csv": {
    /** Export audience CSV */
    get: operations["exportAudience"];
  };
  "/api/audience/segments": {
    /** List saved segments */
    get: operations["listSegments"];
    /** Create new segment */
    post: operations["createSegment"];
  };
  "/api/profile": {
    /** Get profile */
    get: operations["getProfile"];
    /** Update profile */
    put: operations["updateProfile"];
  };
  "/api/prescreen": {
    /** Get prescreen blocks */
    get: operations["getPrescreen"];
  };
  "/api/prescreen/{id}": {
    /** Update prescreen block */
    put: operations["updatePrescreenBlock"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    SubscriptionKeysDto: {
      p256dh?: string;
      auth?: string;
    };
    CreateSubscriptionDto: {
      endpoint?: string;
      keys?: components["schemas"]["SubscriptionKeysDto"];
    };
    SubscriptionDto: components["schemas"]["CreateSubscriptionDto"] & {
      id?: string;
    };
    ConsentDto: {
      version: string;
      textHash: string;
      /** Format: date-time */
      givenAt: string;
    };
    NotifyDto: {
      segment?: {
        [key: string]: unknown;
      };
      title?: string;
      body?: string;
      url?: string;
      ttl?: number;
    };
    CampaignMessageDto: {
      title: string;
      body: string;
      url?: string;
    };
    CampaignCreateDto: {
      name: string;
      studyId?: string;
      segment?: {
        [key: string]: unknown;
      };
      throttlePerMinute?: number;
      message: components["schemas"]["CampaignMessageDto"];
    };
    CampaignDto: components["schemas"]["CampaignCreateDto"] & ({
      id: string;
      /** Format: date-time */
      createdAt: string;
      /** @enum {string} */
      status: "draft" | "launched" | "stopped";
    });
    NotificationEventDto: {
      id: string;
      campaignId: string;
      subscriptionId?: string;
      /** @enum {string} */
      status: "sent" | "failed";
      error?: string;
      /** Format: date-time */
      createdAt: string;
    };
    CreateStudyDto: {
      title: string;
      link: string;
      description?: string;
      durationMin?: number;
      rewardCents?: number;
      /** Format: date-time */
      deadlineAt?: string;
      targeting?: {
        [key: string]: unknown;
      };
      quotas?: {
        [key: string]: unknown;
      };
    };
    StudyDto: components["schemas"]["CreateStudyDto"] & {
      id: string;
    };
    LaunchInvitationDto: {
      studyId?: string;
      segment?: string;
      quota?: number;
    };
    LaunchInvitationResponseDto: {
      launched?: number;
    };
    AudienceFilterDto: {
      q?: string;
      city?: string;
      gender?: string;
      prescreenQuestion?: string;
      prescreenAnswer?: string;
      segmentId?: string;
    };
    AudienceDto: {
      id?: string;
      email?: string;
      name?: string;
      age?: number;
      gender?: string;
      city?: string;
    };
    CreateSegmentDto: {
      name?: string;
      filter?: components["schemas"]["AudienceFilterDto"];
    };
    SegmentDto: components["schemas"]["CreateSegmentDto"] & {
      id?: string;
    };
    ProfileDto: {
      name?: string;
      age?: number;
      gender?: string;
      city?: string;
      profession?: string;
      contacts?: string;
    };
    UpdateProfileDto: {
      name?: string;
      age?: number;
      gender?: string;
      city?: string;
      profession?: string;
      contacts?: string;
    };
    PrescreenBlockDto: {
      id?: string;
      question?: string;
      answer?: string;
    };
    UpdatePrescreenBlockDto: {
      answer?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Create subscription */
  createSubscription: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateSubscriptionDto"];
      };
    };
    responses: {
      /** @description Subscription created */
      201: {
        content: {
          "application/json": components["schemas"]["SubscriptionDto"];
        };
      };
    };
  };
  /** Remove subscription */
  deleteSubscription: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: never;
      };
    };
  };
  /** Send notification immediately */
  notifyNow: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NotifyDto"];
      };
    };
    responses: {
      /** @description Result */
      200: {
        content: {
          "application/json": {
            sent?: number;
          };
        };
      };
    };
  };
  /** Store user consent */
  createConsent: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConsentDto"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: never;
      };
    };
  };
  /** List campaigns */
  listCampaigns: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CampaignDto"][];
        };
      };
    };
  };
  /** Create campaign */
  createCampaign: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CampaignCreateDto"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["CampaignDto"];
        };
      };
    };
  };
  /** Get campaign */
  getCampaign: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CampaignDto"];
        };
      };
    };
  };
  /** Stop campaign */
  stopCampaign: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Stopped */
      200: {
        content: {
          "application/json": {
            stopped?: boolean;
          };
        };
      };
    };
  };
  /** Launch campaign */
  launchCampaign: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Result */
      200: {
        content: {
          "application/json": {
            launched?: number;
          };
        };
      };
    };
  };
  /** List campaign events */
  listCampaignEvents: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["NotificationEventDto"][];
        };
      };
    };
  };
  /** List studies */
  listStudies: {
    responses: {
      /** @description Array of studies */
      200: {
        content: {
          "application/json": components["schemas"]["StudyDto"][];
        };
      };
    };
  };
  /** Create study */
  createStudy: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateStudyDto"];
      };
    };
    responses: {
      /** @description Study created */
      201: {
        content: {
          "application/json": components["schemas"]["StudyDto"];
        };
      };
    };
  };
  /** Get study by id */
  getStudy: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Study */
      200: {
        content: {
          "application/json": components["schemas"]["StudyDto"];
        };
      };
    };
  };
  /** Update study */
  updateStudy: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateStudyDto"];
      };
    };
    responses: {
      /** @description Study */
      200: {
        content: {
          "application/json": components["schemas"]["StudyDto"];
        };
      };
    };
  };
  /** Launch invitations */
  launchInvitations: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LaunchInvitationDto"];
      };
    };
    responses: {
      /** @description Result */
      200: {
        content: {
          "application/json": components["schemas"]["LaunchInvitationResponseDto"];
        };
      };
    };
  };
  /** Export invitations CSV */
  exportInvitations: {
    responses: {
      /** @description CSV */
      200: {
        content: {
          "text/csv": string;
        };
      };
    };
  };
  /** Search audience */
  searchAudience: {
    parameters: {
      query?: {
        q?: string;
        city?: string;
        gender?: string;
        prescreenQuestion?: string;
        prescreenAnswer?: string;
        segmentId?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AudienceDto"][];
        };
      };
    };
  };
  /** Export audience CSV */
  exportAudience: {
    parameters: {
      query?: {
        segmentId?: string | null;
      };
    };
    responses: {
      /** @description CSV */
      200: {
        content: {
          "text/csv": string;
        };
      };
    };
  };
  /** List saved segments */
  listSegments: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SegmentDto"][];
        };
      };
    };
  };
  /** Create new segment */
  createSegment: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateSegmentDto"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["SegmentDto"];
        };
      };
    };
  };
  /** Get profile */
  getProfile: {
    responses: {
      /** @description Profile */
      200: {
        content: {
          "application/json": components["schemas"]["ProfileDto"];
        };
      };
    };
  };
  /** Update profile */
  updateProfile: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateProfileDto"];
      };
    };
    responses: {
      /** @description Profile */
      200: {
        content: {
          "application/json": components["schemas"]["ProfileDto"];
        };
      };
    };
  };
  /** Get prescreen blocks */
  getPrescreen: {
    responses: {
      /** @description Array of prescreen blocks */
      200: {
        content: {
          "application/json": components["schemas"]["PrescreenBlockDto"][];
        };
      };
    };
  };
  /** Update prescreen block */
  updatePrescreenBlock: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePrescreenBlockDto"];
      };
    };
    responses: {
      /** @description Prescreen block */
      200: {
        content: {
          "application/json": components["schemas"]["PrescreenBlockDto"];
        };
      };
    };
  };
}
